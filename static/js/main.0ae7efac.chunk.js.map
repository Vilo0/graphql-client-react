{"version":3,"sources":["firebase.js","context/authContext.js","components/Nav.js","graphql/fragments.js","graphql/queries.js","components/Image.js","components/PostCard.js","pages/Home.js","components/UserCard.js","pages/Users.js","components/forms/AuthForm.js","pages/auth/Register.js","pages/auth/PasswordUpdate.js","pages/auth/PasswordForgot.js","graphql/mutations.js","components/forms/UserProfile.js","components/FileUpload.js","pages/auth/Profile.js","pages/auth/Login.js","pages/auth/CompleteRegistration.js","components/LoadingToRedirect.js","components/PrivateRoute.js","components/PublicRoute.js","components/modals/PostDelete.js","pages/post/Post.js","pages/SingleUser.js","components/modals/PostUpdate.js","components/modals/PostShow.js","pages/post/Posts.js","pages/post/SinglePost.js","App.js","index.js"],"names":["firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","googleAuthProvider","GoogleAuthProvider","firebaseReducer","state","action","type","user","payload","initialState","AuthContext","createContext","AuthProvider","children","useReducer","dispatch","useEffect","unsubscribe","onAuthStateChanged","a","getIdTokenResult","idTokenResult","email","token","value","Provider","Nav","useContext","useState","search","setSearch","history","useHistory","className","to","data-toogle","data-target","aria-controls","aria-expanded","aria-label","id","split","onClick","signOut","href","onSubmit","e","preventDefault","console","log","push","pathname","placeholder","onChange","target","name","USER_INFO","gql","POST_DATA","PROFILE","PUBLIC_PROFILE","ALL_USERS","GET_ALL_POST","POSTS_BY_USER","POST_SHOW","Image","image","handleImageRemove","f","src","url","alt","public_id","style","height","PostCard","post","onShow","onShowDelete","onShowUpdate","postModal","content","minHeight","postedBy","username","handleShow","handleUpdate","handleDelete","Home","useQuery","data","loading","useLazyQuery","fetchPosts","posts","allPosts","map","_id","JSON","stringify","UserCard","images","about","Users","allUsers","AuthForm","password","setEmail","setPassword","handleSubmit","showPasswordInput","hideEmailInput","disabled","required","Register","setLoading","config","handleCodeInApp","sendSignInLinkToEmail","result","toast","success","window","localStorage","setItem","PasswordUpdate","currentUser","updatePassword","then","catch","error","message","PasswordForgot","sendPasswordResetEmail","USER_UPDATE","USER_CREATE","POST_CREATE","POST_UPDATE","POST_DELETE","UserProfile","handleChange","FileUpload","setValues","values","singleUpload","axios","headers","authtoken","response","filteredImages","filter","item","hidden","accept","event","fileInput","files","Resizer","imageFileResizer","uri","Profile","useMemo","profile","omitDeep","useMutation","update","userUpdate","variables","input","Login","signInWithEmailAndPassword","signInWithPopup","CompleteRegistration","getItem","userCreate","signInWithEmailLink","location","emailVerified","removeItem","LoadingToRedirect","path","count","setCount","interval","setInterval","currentCount","clearInterval","PrivateRoute","rest","setUser","PublicRoute","PostUpdateModal","show","onClose","postDelete","setPostId","handleConfirmDelete","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","Post","setShow","setPostModal","limit","page","myData","cache","postCreate","postsByUser","readQuery","query","writeQuery","__typename","onError","err","graphqlQLError","rows","maxLength","PostDelete","SingleUser","params","useParams","publicProfile","postUpdate","dataModal","PostModalShow","Posts","emailUser","context","showDelete","setShowDelete","showUpdate","setShowUpdate","handleShowDelete","handleShowUpdate","setPage","setLimit","setResult","postId","postDeleted","useLocation","parseInt","pageCount","PostUpdate","image_url","SinglePost","idPost","postShow","dataPost","htmlFor","App","client","ApolloClient","request","operation","setContext","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ae7efac.chunk.js","sourcesContent":["import * as firebase from \"firebase\";\n// firebase config\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const googleAuthProvider = new firebase.auth.GoogleAuthProvider();  \n","import React, { useReducer, useEffect, createContext } from \"react\";\nimport { auth } from \"../firebase\";\n\n// reducer function\nconst firebaseReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGGED_IN_USER\":\n      return { ...state, user: action.payload };\n    default:\n      return state;\n  }\n};\n\n// state\nconst initialState = {\n  user: null,\n};\n\n// create context\nconst AuthContext = createContext();\n\n// context provider\nconst AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(firebaseReducer, initialState);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        const idTokenResult = await user.getIdTokenResult();\n\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: { email: user.email, token: idTokenResult.token },\n        });\n      } else {\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: null,\n        });\n      }\n    });\n    // cleanup\n    return () => unsubscribe();\n  }, []);\n\n  const value = { state, dispatch };\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport { AuthProvider, AuthContext };\n","import React, { useState, useContext, Fragment } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth } from \"firebase\";\nimport { AuthContext } from \"../context/authContext\";\n\nconst Nav = () => {\n  const { state, dispatch } = useContext(AuthContext);\n  const [search, setSearch] = useState(\"\");\n  let history = useHistory();\n\n  const { user } = state;\n\n  const logout = () => {\n    auth().signOut();\n    dispatch({\n      type: \"LOGGED_IN_USER\",\n      payload: null,\n    });\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    console.log(\"valor\", search);\n    history.push({\n      pathname: '/posts',\n      state: { search }\n    });\n  }\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light \">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Navbar\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toogle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <Link className=\"nav-link\" to=\"/users\">\n              Users\n            </Link>\n          </li>\n\n          {user && (\n            <li className=\"nav-item active\">\n              <Link className=\"nav-link\" to=\"/profile\">\n                {user && user.email.split(\"@\")[0]}\n              </Link>\n            </li>\n          )}\n\n          {!user && (\n            <Fragment>\n              <li className=\"nav-item active\">\n                <Link className=\"nav-link\" to=\"/login\">\n                  Login\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/register\">\n                  Register\n                </Link>\n              </li>\n            </Fragment>\n          )}\n          {user && (\n            <li className=\"nav-item\">\n              <a onClick={logout} href=\"/login\" className=\"nav-item nav-link\">\n                Logout\n              </a>\n            </li>\n          )}\n        </ul>\n        <form onSubmit={handleSearch} className=\"form-inline my-2 my-lg-0\">\n          <input\n            className=\"form-control mr-sm-2\"\n            type=\"search\"\n            placeholder=\"Search\"\n            aria-label=\"Search\"\n            onChange={(e) => setSearch(e.target.value)}\n            name=\"search\"\n          />\n          <button\n            className=\"btn btn-outline-success my-2 my-sm-0\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { gql } from \"apollo-boost\";\n\nexport const USER_INFO = gql`\n  fragment userInfo on User {\n    _id\n    name\n    username\n    email\n    images {\n      url\n      public_id\n    }\n    about\n    createdAt\n    updatedAt\n  }\n`;\n\nexport const POST_DATA = gql`\n  fragment postData on Post {\n    _id\n    content\n    image {\n      url\n      public_id\n    }\n    postedBy {\n      _id\n      username\n      email\n    }\n  }\n`;\n","import { gql } from \"apollo-boost\";\nimport { USER_INFO, POST_DATA } from \"./fragments\";\n\nexport const PROFILE = gql`\n  query {\n    profile {\n      ...userInfo\n    }\n  }\n  ${USER_INFO}\n`;\n\nexport const PUBLIC_PROFILE = gql`\n  query publicProfile($username: String!) {\n    publicProfile(username: $username) {\n      _id\n      username\n      name\n      email\n      images {\n        url\n        public_id\n      }\n      about\n    }\n  }\n`;\n\nexport const ALL_USERS = gql`\n  query {\n    allUsers {\n      ...userInfo\n    }\n  }\n  ${USER_INFO}\n`;\n\nexport const GET_ALL_POST = gql`\n  query allPosts($limit: Int, $page: Int, $search: String){\n    allPosts(limit: $limit, page: $page, search: $search) {\n      posts {\n        ...postData\n      },\n      page,\n      pages,\n      total\n    }\n  }\n  ${POST_DATA}\n`;\n\nexport const POSTS_BY_USER = gql`\n  query postsByUser($limit: Int, $page: Int, $search: String) {\n    postsByUser (limit: $limit, page: $page, search: $search) {\n      posts {\n        ...postData\n      }\n      page,\n      pages,\n      total\n    }\n  }\n  ${POST_DATA}\n`;\n\nexport const POST_SHOW = gql`\n  query postShow($id: ID!) {\n    postShow (id: $id) {\n      ...postData\n    }\n  }\n  ${POST_DATA}\n`;\n\n\n","import React from \"react\";\n\n\nconst Image = ({ image, handleImageRemove = (f) => f }) => (\n    <img \n        src={image.url}\n        key={image.public_id}\n        alt={image.public_id}\n        style={{ height: \"100px\" }}\n        className=\"img-thumbnail m-3\"\n        onClick={() => handleImageRemove(image.public_id)}\n    />\n);\n\nexport default Image;","import React from \"react\";\nimport Image from \"./Image\";\nimport { Link } from \"react-router-dom\";\n\nconst PostCard = ({ post, onShow, onShowDelete, onShowUpdate, postModal, email }) => {\n\n  const { image, content } = post;\n\n  const handleShow = (post) => {\n    onShow()\n    postModal(post)\n  }\n\n  const handleUpdate = (post) => {\n    onShowUpdate()\n    postModal(post)\n  }\n\n  const handleDelete = (post) => {\n    onShowDelete()\n    postModal(post)\n  }\n\n  return (\n    <div className=\"card text-center\" style={{ minHeight: \"375px \" }}>\n      <div className=\"card-body\">\n        <Image image={image} />\n        <h4 className=\"text-primary\">@{post.postedBy.username}</h4>\n        <hr />\n        <small>{content}</small>\n      </div>\n      { (email === post.postedBy.email) && (\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <button onClick={() => handleShow(post)} className=\"btn btn-primary\" type=\"button\">Detalle</button>\n          </div>\n          <div className=\"col-4\">\n            <button onClick={() => handleUpdate(post)} className=\"btn btn-warning\" type=\"button\">Editar</button>\n          </div>\n          <div className=\"col-4\">\n            <button onClick={() => handleDelete(post)} className=\"btn btn-danger\" type=\"button\">Borrar</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PostCard;\n","import React, { useContext } from \"react\";\nimport { useQuery, useLazyQuery } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../context/authContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { GET_ALL_POST } from \"../graphql/queries\";\nimport PostCard from \"../components/PostCard\";\n\nconst Home = () => {\n  const { data, loading } = useQuery(GET_ALL_POST);\n  const [fetchPosts, { data: posts }] = useLazyQuery(GET_ALL_POST);\n  // access context\n  const { state } = useContext(AuthContext);\n  // react router\n  let history = useHistory();\n\n  /*const updateUserName = () => {\n    dispatch({\n      type: \"LOGGED_IN_USER\",\n      payload: \"Miguel Chamorro\",\n    });\n  };*/\n\n  if (loading) return <p className=\"p-5\">Loading...</p>;\n\n  return (\n    <div className=\"container\">\n      <div className=\"row p-5\">\n        {data &&\n          data.allPosts.posts.map((post) => (\n            <div className=\"col-md-4 pt-5\" key={post._id}>\n              <PostCard post={post} />\n            </div>\n          ))}\n      </div>\n      <div className=\"row p-5\">\n        <button\n          onClick={() => fetchPosts()}\n          className=\"btn-btn-raised btn-primary\"\n        >\n          Fetch Posts\n        </button>\n      </div>\n      <hr />\n      {JSON.stringify(posts)}\n      <hr />\n      {JSON.stringify(state.user)}\n      <hr />\n      {JSON.stringify(history)}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Image from \"./Image\";\nimport { Link } from \"react-router-dom\";\n\nconst UserCard = ({ user }) => {\n  const { username, images, about } = user;\n  return (\n    <div className=\"card text-center\" style={{ minHeight: \"375px \" }}>\n      <div className=\"card-body\">\n        <Image image={images[0]} />\n        <Link to={`/user/${username}`}>\n          <h4 className=\"text-primary\">@{username}</h4>\n        </Link>\n        <hr />\n        <small>{about}</small>\n      </div>\n    </div>\n  );\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { ALL_USERS } from \"../graphql/queries\";\nimport UserCard from \"../components/UserCard\";\n\nconst Users = () => {\n  const { data, loading } = useQuery(ALL_USERS);\n\n  if (loading) return <p className=\"p-5\">Loading...</p>;\n\n  return (\n    <div className=\"container\">\n      <div className=\"row p-5\">\n        {data &&\n          data.allUsers.map((user) => (\n            <div className=\"col-md-4 p-2\" key={user._id}>\n              <UserCard user={user} />\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Users;\n","import React from \"react\";\n\nconst AuthForm = ({\n  email = \"\",\n  password = \"\",\n  loading,\n  setEmail = (f) => f,\n  setPassword,\n  handleSubmit,\n  showPasswordInput = false,\n  hideEmailInput = false,\n}) => (\n  <form onSubmit={handleSubmit}>\n    {!hideEmailInput && (\n      <div className=\"form-group\">\n        <label>Email Address</label>\n        <input\n          type=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          className=\"form-control\"\n          placeholder=\"Enter email\"\n          disabled={loading}\n        />\n      </div>\n    )}\n\n    {showPasswordInput && (\n      <div className=\"form-group\">\n        <label>Password</label>\n        <input\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          className=\"form-control\"\n          placeholder=\"Enter password\"\n          disabled={loading}\n          required\n        />\n      </div>\n    )}\n\n    <button className=\"btn btn-raised btn-primary\" disabled={loading}>\n      Submit\n    </button>\n  </form>\n);\n\nexport default AuthForm;\n","import React, { useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport AuthForm from \"../../components/forms/AuthForm\";\n\nconst Register = () => {\n  const [email, setEmail] = useState(\"mchamorro@laescala.cl\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const config = {\n      url: process.env.REACT_APP_CONFIRMATION_EMAIL_REDIRECT,\n      handleCodeInApp: true,\n    };\n    const result = await auth.sendSignInLinkToEmail(email, config);\n    console.log(\"result\", result);\n    // show toast notification to user about email sent\n    toast.success(\n      `Email is sent to ${email}, click the link to complete your registration.`\n    );\n    // save user email to local storage\n    window.localStorage.setItem(\"emailForRegistration\", email);\n    // clear state\n    setEmail(\"\");\n    setLoading(\"\");\n  };\n\n  return (\n    <div className=\"container p-5\">\n      {loading ? (\n        <h4 className=\"text-danger\">Loading...</h4>\n      ) : (\n        <h4>Register</h4>\n      )}\n      <AuthForm email={email} loading={loading} setEmail={setEmail} handleSubmit={handleSubmit} />\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport AuthForm from \"../../components/forms/AuthForm\";\n\nconst PasswordUpdate = () => {\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    auth.currentUser\n      .updatePassword(password)\n      .then(() => {\n        setLoading(false);\n        toast.success(\"Password updated\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        toast.error(error.message);\n      });\n  };\n\n  return (\n    <div className=\"container p-5\">\n      {loading ? (\n        <h4 className=\"text-danger\">Loading...</h4>\n      ) : (\n        <h4>Password update</h4>\n      )}\n\n      <AuthForm\n        password={password}\n        setPassword={setPassword}\n        loading={loading}\n        handleSubmit={handleSubmit}\n        showPasswordInput=\"true\"\n        hideEmailInput=\"true\"\n      />\n    </div>\n  );\n};\n\nexport default PasswordUpdate;\n","import React, { useState } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport AuthForm from \"../../components/forms/AuthForm\";\n\nconst PasswordForgot = () => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const config = {\n      url: process.env.REACT_APP_PASSWORD_FORGOT_REDIRECT,\n      handleCodeInApp: true,\n    };\n\n    await auth\n      .sendPasswordResetEmail(email, config)\n      .then(() => {\n        setEmail(\"\");\n        setLoading(false);\n        toast.success(\n          `Email is sent to ${email}. Click on the link to reset your password`\n        );\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(\"error on password forgot email\", error);\n      });\n  };\n\n  return (\n    <div className=\"container p-5\">\n      {loading ? <h4>Loading...</h4> : <h4>Forgot Password </h4>}\n\n      <AuthForm\n        email={email}\n        setEmail={setEmail}\n        loading={loading}\n        handleSubmit={handleSubmit}\n      />\n    </div>\n  );\n};\n\nexport default PasswordForgot;\n","import { gql } from \"apollo-boost\";\nimport { USER_INFO, POST_DATA }  from \"./fragments\";\n\nexport const USER_UPDATE = gql`\n  mutation userUpdate($input: UserUpdateInput!) {\n    userUpdate(input: $input) {\n      ...userInfo\n    }\n  }\n  ${USER_INFO}\n`;\n\nexport const USER_CREATE = gql`\n  mutation userCreate {\n    userCreate {\n      username\n      email\n    }\n  }\n`;\n\nexport const POST_CREATE = gql`\n  mutation postCreate($input: PostCreateInput!) {\n    postCreate(input: $input) {\n      ...postData\n    }\n  }\n  ${POST_DATA}\n`;\n\nexport const POST_UPDATE = gql`\n  mutation postUpdate($id: ID!, $input: PostCreateInput!) {\n    postUpdate(id: $id, input: $input) {\n      ...postData\n    }\n  }\n  ${POST_DATA}\n`;\n\nexport const POST_DELETE = gql`\n  mutation postDelete($id: ID!) {\n    postDelete(id: $id) {\n      ...postData\n    }\n  }\n  ${POST_DATA}\n`;\n","import React from \"react\";\n\nconst UserProfile = ({\n  handleSubmit,\n  handleChange,\n  username,\n  name,\n  email,\n  about,\n  loading,\n}) => (\n  <form onSubmit={handleSubmit}>\n    <div className=\"form-group\">\n      <label>Username</label>\n      <input\n        type=\"text\"\n        name=\"username\"\n        value={username}\n        onChange={handleChange}\n        className=\"form-control\"\n        placeholder=\"Username\"\n        disabled={loading}\n      />\n    </div>\n\n    <div className=\"form-group\">\n      <label>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        className=\"form-control\"\n        placeholder=\"Name\"\n        disabled={loading}\n      />\n    </div>\n\n    <div className=\"form-group\">\n      <label>Email</label>\n      <input\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={handleChange}\n        className=\"form-control\"\n        placeholder=\"Email\"\n        disabled\n      />\n    </div>\n\n    <div className=\"form-group\">\n      <label>About</label>\n      <textarea\n        name=\"about\"\n        value={about}\n        onChange={handleChange}\n        className=\"form-control\"\n        placeholder=\"About\"\n        disabled={loading}\n      />\n    </div>\n\n    <button\n      className=\"btn btn-primary\"\n      type=\"submit\"\n      disabled={!email || loading}\n    >\n      Submit\n    </button>\n  </form>\n);\n\nexport default UserProfile;\n","import React, { useContext } from \"react\";\nimport Resizer from \"react-image-file-resizer\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../context/authContext\";\nimport Image from \"./Image\";\n\nconst FileUpload = ({\n  setValues,\n  setLoading,\n  values,\n  singleUpload = false,\n}) => {\n  const { state } = useContext(AuthContext);\n\n  const fileResizeAndUpload = (event) => {\n    setLoading(true);\n    let fileInput = false;\n    if (event.target.files[0]) {\n      fileInput = true;\n    }\n    if (fileInput) {\n      Resizer.imageFileResizer(\n        event.target.files[0],\n        300,\n        300,\n        \"JPEG\",\n        100,\n        0,\n        (uri) => {\n          axios\n            .post(\n              `${process.env.REACT_APP_REST_ENDPOINT}/uploadimages`,\n              { image: uri },\n              {\n                headers: {\n                  authtoken: state.user.token,\n                },\n              }\n            )\n            .then((response) => {\n              setLoading(false);\n              console.log(\"CLOUDINARY UPLOAD\", response);\n              if (singleUpload) {\n                // single upload\n                const { image } = values;\n                setValues({ ...values, image: response.data });\n              } else {\n                const { images } = values;\n                setValues({ ...values, images: [...images, response.data] });\n              }\n            })\n            .catch((error) => {\n              setLoading(false);\n              console.log(\"CLOUDINARY UPLOAD FAILED\", error);\n            });\n        },\n        \"base64\"\n      );\n    }\n  };\n\n  const handleImageRemove = (id) => {\n    setLoading(true);\n    axios\n      .post(\n        `${process.env.REACT_APP_REST_ENDPOINT}/removeimage`,\n        {\n          public_id: id,\n        },\n        {\n          headers: {\n            authtoken: state.user.token,\n          },\n        }\n      )\n      .then((response) => {\n        setLoading(false);\n        if (singleUpload) {\n          const { image } = values;\n          setValues({\n            ...values,\n            image: {\n              url: \"\",\n              public_id: \"\"\n            }\n          });\n        } else {\n          const { images } = values;\n          let filteredImages = images.filter((item) => {\n          return item.public_id !== id;\n        });\n        setValues({ ...values, images: filteredImages });\n        }\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error);\n      });\n  };\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-3\">\n        <div className=\"form-group\">\n          <label className=\"btn btn-primary\">\n            Upload Image\n            <input\n              hidden\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={fileResizeAndUpload}\n              className=\"form-control\"\n              placeholder=\"Image\"\n            />\n          </label>\n        </div>\n      </div>\n      <div className=\"col-md-9\">\n        {/*for single image*/}\n        {values.image && (\n          <Image\n            image={values.image}\n            key={values.image.public_id}\n            handleImageRemove={handleImageRemove}\n          />\n        )}\n\n        {/*for multiple image*/}\n        {values.images &&\n          values.images.map((image) => (\n            <Image\n              image={image}\n              key={image.public_id}\n              handleImageRemove={handleImageRemove}\n            />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload;\n","import React, { useState, useMemo } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport omitDeep from \"omit-deep\";\nimport { PROFILE } from \"../../graphql/queries\";\nimport { USER_UPDATE } from \"../../graphql/mutations\";\nimport UserProfile from \"../../components/forms/UserProfile\";\nimport FileUpload from \"../../components/FileUpload\";\n\nconst Profile = () => {\n  const [values, setValues] = useState({\n    username: \"\",\n    name: \"\",\n    email: \"\",\n    about: \"\",\n    images: [],\n  });\n  const [loading, setLoading] = useState(false);\n\n  const { data } = useQuery(PROFILE);\n\n  useMemo(() => {\n    if (data) {\n      console.log(data.profile);\n      setValues({\n        ...values,\n        username: data.profile.username,\n        name: data.profile.name,\n        email: data.profile.email,\n        about: data.profile.about,\n        images: omitDeep(data.profile.images, [\"__typename\"]),\n      });\n    }\n  }, [data]);\n\n  // mutation\n  const [userUpdate] = useMutation(USER_UPDATE, {\n    update: ({ data }) => {\n      console.log(\"USER UPDATE MUTATION IN PROFILE\", data);\n      toast.success(\"Profile updated\");\n    },\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(values);\n    setLoading(true);\n    userUpdate({ variables: { input: values } });\n    setLoading(false);\n  };\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  return (\n    <div className=\"container p-5\">\n      <div className=\"row\">\n        <div className=\"col-md-12 pb-3\">\n          {loading ? (\n            <h4 className=\"text-danger\">Loading...</h4>\n          ) : (\n            <h4>Profile</h4>\n          )}\n        </div>\n\n        <FileUpload\n          setValues={setValues}\n          setLoading={setLoading}\n          values={values}\n          loading={loading}\n        />\n      </div>\n      <UserProfile\n        {...values}\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        loading={loading}\n      />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { auth, googleAuthProvider } from \"../../firebase\";\nimport AuthForm from \"../../components/forms/AuthForm\";\n\nconst Login = () => {\n  const { dispatch } = useContext(AuthContext);\n  const [email, setEmail] = useState(\"thevilos@gmail.com\");\n  const [password, setPassword] = useState(\"escalab2021\");\n  const [loading, setLoading] = useState(false);\n\n  let history = useHistory();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      await auth\n        .signInWithEmailAndPassword(email, password)\n        .then(async (result) => {\n          const { user } = result;\n          const idTokenResult = await user.getIdTokenResult();\n\n          dispatch({\n            type: \"LOGGED_IN_USER\",\n            payload: { email: user.email, token: idTokenResult.token },\n          });\n\n          history.push(\"/\");\n        });\n    } catch (error) {\n      console.log(\"login error\", error);\n      toast.error(error.message);\n      setLoading(false);\n    }\n  };\n\n  const googleLogin = () => {\n    auth.signInWithPopup(googleAuthProvider).then(async (result) => {\n      const { user } = result;\n      const idTokenResult = await user.getIdTokenResult();\n\n      dispatch({\n        type: \"LOGGED_iN_USER\",\n        payload: { email: user.email, token: idTokenResult.token },\n      });\n      history.push(\"/profile\");\n    });\n  };\n\n  return (\n    <div className=\"container p-5\">\n      {loading ? <h4 className=\"text-danger\">Loading...</h4> : <h4>Login</h4>}\n      <button onClick={googleLogin} className=\"btn btn-raised btn-danger mt-5\">\n        Login with Google\n      </button>\n      <AuthForm\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        loading={loading}\n        handleSubmit={handleSubmit}\n        showPasswordInput=\"true\"\n      />\n      <Link className=\"text-danger float-right\" to=\"/password/forgot\">\n        Forgot Password\n      </Link>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport AuthForm from \"../../components/forms/AuthForm\";\nimport { USER_CREATE } from \"../../graphql/mutations\";\n\nconst CompleteRegistration = () => {\n  const { dispatch } = useContext(AuthContext);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  let history = useHistory();\n\n  useEffect(() => {\n    setEmail(window.localStorage.getItem(\"emailForRegistration\"));\n  }, [history]);\n\n  const [userCreate] = useMutation(USER_CREATE);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    // validation\n    if (!email || !password) {\n      toast.error(\"Email and password is required\");\n      return;\n    }\n    try {\n      const result = await auth.signInWithEmailLink(\n        email,\n        window.location.href\n      );\n      // console.log(result);\n      if (result.user.emailVerified) {\n        // remove email from local storage\n        window.localStorage.removeItem(\"emailForRegistration\");\n        let user = auth.currentUser;\n        await user.updatePassword(password);\n\n        // dispatch user with token and email\n        // then redirect\n        const idTokenResult = await user.getIdTokenResult();\n        dispatch({\n          type: \"LOGGED_IN_USER\",\n          payload: { email: user.email, token: idTokenResult.token },\n        });\n        // make api request to save/update user in mongodb\n        userCreate();\n        history.push(\"/password/update\");\n      }\n    } catch (error) {\n      console.log(\"register complete error\", error.message);\n      setLoading(false);\n      toast.error(error.message);\n    }\n  };\n\n  return (\n    <div className=\"container p-5\">\n      {loading ? (\n        <h4 className=\"text-danger\">Loading...</h4>\n      ) : (\n        <h4>Complete Your Registration</h4>\n      )}\n      <AuthForm\n        email={email}\n        setEmail={setEmail}\n        password={password}\n        setPassword={setPassword}\n        loading={loading}\n        handleSubmit={handleSubmit}\n        showPasswordInput=\"true\"\n      />\n    </div>\n  );\n};\n\nexport default CompleteRegistration;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoadingToRedirect = ({ path }) => {\n  const [count, setCount] = useState(5);\n  let history = useHistory();\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((currentCount) => --currentCount);\n    }, 1000);\n    count === 0 && history.push(path);\n    // cleanup\n    return () => clearInterval(interval);\n  }, [count]);\n\n  return (\n    <div className=\"container p-5 text-center\">\n      <p>Redirecting you in {count} seconds...</p>\n    </div>\n  );\n};\n\nexport default LoadingToRedirect;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport { AuthContext } from \"../context/authContext\";\nimport LoadingToRedirect from \"./LoadingToRedirect\";\n\nconst PrivateRoute = ({ ...rest }) => {\n  const { state } = useContext(AuthContext);\n  const [user, setUser] = useState(false);\n\n  useEffect(() => {\n    if (state.user) {\n      setUser(true);\n    }\n  }, [state.user]);\n\n  const navLinks = () => (\n    <nav>\n      <ul className=\"nav flex-column\">\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/profile\">\n            Profile\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/password/update\">\n            Password\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link className=\"nav-link\" to=\"/post/create\">\n            Post\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n\n  const renderContent = () => (\n    <div className=\"container-fluid pt-5\">\n      <div className=\"row\">\n        <div className=\"col-md-4\">{navLinks()}</div>\n        <div className=\"col-md-8\">\n          <Route {...rest} />\n        </div>\n      </div>\n    </div>\n  );\n\n  return user ? renderContent() : <LoadingToRedirect path=\"/login\" />;\n};\n\nexport default PrivateRoute;\n","import React, { useContext, useEffect } from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport { AuthContext } from \"../context/authContext\";\n\nconst PublicRoute = ({ ...rest }) => {\n  const { state } = useContext(AuthContext);\n  let history = useHistory();\n\n  useEffect(() => {\n    if (state.user) {\n      history.push(\"profile\");\n    }\n  }, [history, state.user]);\n\n  return (\n    <div className=\"container-fluid p-5\">\n      <Route {...rest} />\n    </div>\n  );\n};\n\nexport default PublicRoute;\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Modal, Button } from \"react-bootstrap\";\n\n\nconst PostUpdateModal = ({ show, onClose, postModal, postDelete, setPostId }) => {\n    const handleConfirmDelete = async (id) => {\n      await setPostId(id);\n      postDelete({ variables: { id } });\n      onClose();\n      toast.success(\"Post deleted\");\n    }\n\n    return (\n        <>\n            <Modal show={show} onHide={onClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Post</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>¿Estás seguro de eliminar el post: <b>{ postModal?._id }</b>?</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={onClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => handleConfirmDelete(postModal?._id)}>\n                        Confirm\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n}\n  \n  export default PostUpdateModal;","import React, { useState, useContext } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport FileUpload from \"../../components/FileUpload\";\nimport { POST_CREATE } from \"../../graphql/mutations\";\nimport { POSTS_BY_USER } from \"../../graphql/queries\";\nimport PostCard from \"../../components/PostCard\";\nimport PostDeleteModal from \"../../components/modals/PostDelete\";\nimport { AuthContext } from \"../../context/authContext\";\n\nconst initialState = {\n  content: \"\",\n  image: {\n    url: \"https://via.placeholder.com/200x200.png?text=Post\",\n    public_id: \"123\",\n  },\n};\n\nconst Post = () => {\n  const context = useContext(AuthContext);\n\n  const [show, setShow] = useState(false);\n  const [postModal, setPostModal] = useState('');\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const [values, setValues] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [limit, setLimit] = useState(20);\n  const [page, setPage] = useState(1);\n\n  //query\n  const { data: myData } = useQuery(POSTS_BY_USER, { variables: { limit, page } });\n\n  // destrecture\n  const { content } = values;\n\n\n  // mutation\n  const [postCreate] = useMutation(POST_CREATE, {\n    // read query from cache / write query to cache\n    update: (cache, { data: { postCreate } }) => {\n      // read Query from cache\n      const { postsByUser } = cache.readQuery({\n        query: POSTS_BY_USER,\n        variables: { limit, page }\n      });\n      // write Query to cache\n      cache.writeQuery({\n        query: POSTS_BY_USER,\n        variables: { limit, page },\n        data: {\n          postsByUser: {\n            __typename: \"PostInfo\",\n            posts: [postCreate, ...postsByUser.posts],\n          }\n          // postsByUser: [postCreate, ...postsByUser],\n        },\n      });\n    },\n    onError: (err) => console.log(err.graphqlQLError[0].message),\n  });\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    postCreate({ variables: { input: values } });\n    setValues(initialState);\n    setLoading(false);\n    toast.success(\"Post created\");\n  };\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const createForm = () => (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <textarea\n          value={content}\n          onChange={handleChange}\n          name=\"content\"\n          rows=\"5\"\n          className=\"md-textarea form-control\"\n          placeholder=\"Write something cool\"\n          maxLength=\"150\"\n          disabled={loading}\n        ></textarea>\n      </div>\n\n      <button\n        className=\"btn btn-primary\"\n        type=\"submit\"\n        disabled={loading || !content}\n      >\n        Post\n      </button>\n    </form>\n  );\n\n  return (\n    <div className=\"container p-5\">\n      {loading ? <h4 className=\"text-danger\">Loading</h4> : <h4>Create</h4>}\n\n      <FileUpload\n        values={values}\n        loading={loading}\n        setValues={setValues}\n        setLoading={setLoading}\n        singleUpload={true}\n      />\n\n      <div className=\"row\">\n        <div className=\"col\">{createForm()}</div>\n      </div>\n      <hr />\n      <div className=\"row p-5\">\n        { myData &&\n          myData.postsByUser.posts.map((post) => (\n            <div className=\"col-md-6 pt-5\" key={post._id}>\n              <PostCard post={post} onShow={handleShow} postModal={setPostModal} />\n            </div>\n          )) }\n      </div>\n\n      <PostDeleteModal show={show} onClose={handleClose} postModal={postModal} limit={limit} page={page} />\n    </div>\n  );\n};\n\nexport default Post;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { useParams } from \"react-router-dom\";\nimport UserCard from \"../components/UserCard\";\nimport { PUBLIC_PROFILE } from \"../graphql/queries\";\n\nconst SingleUser = () => {\n  let params = useParams();\n  const { loading, data } = useQuery(PUBLIC_PROFILE, {\n    variables: { username: params.username },\n  });\n\n  if (loading) return <p className=\"p-5\">Loading...</p>;\n\n  return (\n    <div className=\"container\">\n      <br />\n      <br />\n      <UserCard user={data.publicProfile} />\n    </div>\n  );\n};\n\nexport default SingleUser;\n","import React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport FileUpload from \"../FileUpload\";\n\nconst initialState = {\n    id: \"\",\n    content: \"\",\n    image: {\n        url: \"https://via.placeholder.com/200x200.png?text=Post\",\n        public_id: \"123\",\n    },\n};\n\nconst PostUpdateModal = ({ show, onClose, postModal, postUpdate }) => {\n    \n    const [loading, setLoading] = useState(false);\n\n    const [values, setValues] = useState(initialState);\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        console.log(\"e.target.value\", e.target.value);\n        setValues({ ...values, [e.target.name]: e.target.value });\n    }\n\n    const { content } = values;\n\n    const handleSubmit = (e) => {\n        console.log(\"actualizando post\");\n        e.preventDefault();\n        setLoading(true);\n        const id =  values.id;\n        delete values.id;\n        postUpdate({ variables: { id: id, input: values } });\n        setLoading(false);\n        onClose();\n    }\n\n    useEffect(() => {\n        if(postModal) {\n            const dataModal = {\n                id: postModal?._id,\n                content: postModal?.content,\n                image: {\n                    url: postModal?.image?.url,\n                    public_id: postModal?.image?.public_id,\n                },\n            }\n            setValues(dataModal);\n            console.log(\"dataModal\", dataModal);\n        }\n    }, [postModal])\n\n    const updateForm = () => (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <textarea\n              value={content}\n              onChange={handleChange}\n              name=\"content\"\n              rows=\"5\"\n              className=\"md-textarea form-control\"\n              placeholder=\"Write something cool\"\n              maxLength=\"150\"\n              disabled={loading}\n            ></textarea>\n          </div>\n    \n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            disabled={loading || !content}\n          >\n            Post\n          </button>\n        </form>\n      );\n\n    return (\n        <>\n            <Modal show={show} onHide={onClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{loading ? <h4 className=\"text-danger\">Loading</h4> : <h4>Post Update</h4> }</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FileUpload\n                        values={values}\n                        loading={loading}\n                        setValues={setValues}\n                        setLoading={setLoading}\n                        singleUpload={true}\n                    />\n                    { updateForm() }\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={onClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={() => handleSubmit}>\n                        Confirm\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default PostUpdateModal;","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst PostModalShow = ({ show, onClose, postModal }) => {\n\n    return (\n        <>\n            <Modal show={show} onHide={onClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Show Post</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <p>{ JSON.stringify(postModal) }</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={onClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default PostModalShow;","import React, { useState, useEffect, useContext } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { POST_UPDATE, POST_DELETE } from \"../../graphql/mutations\";\nimport { POSTS_BY_USER, GET_ALL_POST } from \"../../graphql/queries\";\nimport PostCard from \"../../components/PostCard\";\nimport PostDeleteModal from \"../../components/modals/PostDelete\";\nimport { useLocation } from \"react-router-dom\";\nimport PostUpdateModal from \"../../components/modals/PostUpdate\";\nimport { AuthContext } from \"../../context/authContext\";\nimport PostModalShow from \"../../components/modals/PostShow\";\n\nconst Posts = () => {\n\n    let emailUser = null;\n    const context = useContext(AuthContext);\n\n    if(context) {\n        if (context.state.user) {\n            const { email } = context.state.user;\n            emailUser = email;\n        }\n    }\n\n    const [show, setShow] = useState(false);\n    const [showDelete, setShowDelete] = useState(false);\n    const [showUpdate, setShowUpdate] = useState(false);\n    const [postModal, setPostModal] = useState('');\n\n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n    \n    const handleCloseDelete = () => setShowDelete(false);\n    const handleShowDelete = () => setShowDelete(true);\n\n    const handleShowUpdate = () => setShowUpdate(true);\n    const handleCloseUpdate = () => setShowUpdate(false);\n\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState(1);\n\n    const [limit, setLimit] = useState(6);\n    const [search, setSearch] = useState(\"\");\n    const [result, setResult] = useState(\"\");\n    const [postId, setPostId] = useState(\"\");\n\n    const { data } = useQuery(GET_ALL_POST, { variables: { limit, page, search: result } });\n\n    const [postUpdate] = useMutation(POST_UPDATE, {\n        // read query from cache / write query to cache\n        update: (cache, { data: { postUpdate } }) => {\n            // read Query from cache\n            const { allPosts } = cache.readQuery({\n                query: GET_ALL_POST,\n                variables: { limit, page, search: result }\n            });\n            console.log(\"allPosts\", allPosts)\n            // write Query to cache\n            cache.writeQuery({\n                query: GET_ALL_POST,\n                variables: { limit, page, search: result },\n                data: {\n                    allPosts: {\n                        __typename: \"PostInfo\",\n                        posts: allPosts.posts,\n                    },\n                    // postsByUser: [postCreate, ...postsByUser],\n                },\n            });\n        },\n        onError: (err) => console.log(err.graphqlQLError[0].message),\n    });\n\n    const [postDelete] = useMutation(POST_DELETE, {\n        // read query from cache / write query to cache\n        update: (cache, { data: { postDeleted } }) => {\n          // read Query from cache\n          const { allPosts } = cache.readQuery({\n            query: GET_ALL_POST,\n            variables: { limit, page, search: result }\n          });\n          // write Query to cache\n          cache.writeQuery({\n            query: GET_ALL_POST,\n            variables: { limit, page, search: result },\n            data: {\n              allPosts: {\n                __typename: \"PostInfo\",\n                posts: allPosts.posts.filter((post) => post._id !== postId)\n              }\n              // postsByUser: [postCreate, ...postsByUser],\n            },\n          });\n        },\n        onError: (err) => console.log(err.graphqlQLError[0].message),\n    });\n\n    // useLocation\n    const location = useLocation();\n\n    useEffect(() => {\n        console.log(\"cambiando resultado\");\n    }, [data]);\n\n    useEffect(() => {\n        if(location.pathname && location.state) {\n            setLoading(true);\n            setResult(location.state.search);\n            setLoading(false);\n        }\n     }, [location]);\n\n    const handleLimit = (e) => {\n        e.preventDefault();\n        console.log(e.target.value);\n        setLimit(parseInt(e.target.value));\n    }\n\n    const handleSearch = (e) => {\n        setSearch(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"entro al handleSubmit\");\n        setResult(search);\n    }\n\n    return (\n        <div className=\"container p-5\">\n            { loading ? <h4>Cargando....</h4> : <h1 className=\"text-center\">Todos los Posts</h1> }\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <form className=\"form-inline mt-5 float-right\" onSubmit={handleSubmit}>\n                        <div className=\"form-group my-2 my-lg-0 mr-3\">\n                            <input\n                                className=\"form-control mr-sm-2\"\n                                type=\"search\"\n                                name=\"search\"\n                                onChange={handleSearch}\n                                value={search}\n                                placeholder=\"\"\n                                aria-label=\"Search\"\n                            />\n                            <button\n                                className=\"btn btn-outline-success my-2 my-sm-0\"\n                                type=\"submit\"\n                            >\n                                <span>Search</span>\n                                {/* <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\n                                    <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\n                                </svg> */}\n                            </button>\n                        </div>\n                        <div className=\"form-group\">\n                            <select className=\"custom-select\" onChange={handleLimit}>\n                                <option value=\"\">N° por página</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"6\">6</option>\n                                <option value=\"9\">9</option>\n                                <option value=\"12\">12</option>\n                            </select>\n                        </div>\n                    </form>          \n                </div>\n            </div>\n            \n            <div className=\"row\">\n                { data &&  \n                    data.allPosts.posts.map((post) => (\n                        <div className=\"col-md-4 pt-5\" key={post._id}>\n                            <PostCard \n                                post={post}  \n                                onShow={handleShow}\n                                onShowDelete={handleShowDelete} \n                                onShowUpdate={handleShowUpdate} \n                                postModal={setPostModal} \n                                email={emailUser} />\n                        </div>\n                    ))\n                }\n            </div>\n            <div className=\"row\">\n                \n                { // data && (page < data.allPosts.pages) && (\n                        <div className=\"col-12 p-3 mt-3\">\n                            <button onClick={() => setPage(pageCount => pageCount + 1)} className=\"btn btn-primary float-right\" type=\"button\">Next Page</button>    \n                        </div>  \n                   // )  \n                }  \n                { // data && (page > data.allPosts.pages) && (\n                        <div className=\"col-12 float-left p-3 mt-3\">\n                            <button onClick={() => setPage(pageCount => pageCount - 1)} className=\"btn btn-primary float-left\" type=\"button\">Prev Page</button>    \n                        </div>     \n                   // )\n                }\n            </div>\n            { show && (\n                <PostModalShow show={show} onClose={handleClose} postModal={postModal} />\n            ) }\n            { showDelete && (\n                <PostDeleteModal show={showDelete} onClose={handleCloseDelete} postModal={postModal} postDelete={postDelete} setPostId={setPostId} />\n            ) }\n            { showUpdate && (\n                <PostUpdateModal show={showUpdate} onClose={handleCloseUpdate} postModal={postModal} postUpdate={postUpdate} />\n            ) }\n        </div>\n    );\n}\n\nexport default Posts; ","import React, { useState, useMemo } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { POST_SHOW } from \"../../graphql/queries\";\nimport { POST_UPDATE } from \"../../graphql/mutations\";\n\nconst initialState = {\n    id: \"\",\n    content: \"\",\n    image_url: \"\",\n}\n\nexport const SinglePost = () => {\n    const { idPost } = useParams();\n    const { loading, data } = useQuery(POST_SHOW, { variables: { id: idPost } });\n    \n    const [values, setValues] = useState(initialState);\n    const [loadingForm, setLoading] = useState(false);\n    const { id, content } = values;\n\n    useMemo(() => {\n        if (data) {\n          console.log(data.postShow);\n          setValues({\n            ...values,\n            id: data.postShow._id,\n            content: data.postShow.content,\n            image_url: data.postShow.image.url\n          });\n        }\n    }, [data]);\n\n    //useMutation\n    const [postUpdate] = useMutation(POST_UPDATE, {\n        update: ({ data: dataPost }) => {\n          console.log(\"POST UPDATE MUTATION\", dataPost);\n          toast.success(\"Post updated\");\n        },\n      });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        postUpdate({ variables: { id: values.id, input: { content: values.content } } });\n        setLoading(false);\n    }\n\n    const handleChange = (e) => {\n        setValues({ ...values, [e.target.name]: e.target.value });\n    }\n\n    console.log(idPost);\n    return (\n        <div className=\"container p-5\">\n            {  loading ? <h3>Loading...</h3> :\n                <div className=\"row\">   \n                    <div className=\"col-12\">    \n                        <h3>Actualizar Post</h3>\n                    </div> \n                    <div className=\"col-12\">\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"form-group\">\n                                <input type=\"hidden\" name=\"id\" value={id} />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"content\">Description</label>\n                                <textarea onChange={handleChange} className=\"form-control\" id=\"content\" name=\"content\" rows=\"5\" value={content}>\n                                </textarea>\n                            </div>\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary\" type=\"submit\">Guardar Cambios</button>\n                            </div>\n                        </form>\n                    </div>\n                </div> }\n        </div>\n    )\n}\n\nexport default SinglePost;\n","import React, { useContext } from \"react\";\nimport ApolloClient from \"apollo-boost\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"./context/authContext\";\nimport { ToastContainer } from \"react-toastify\";\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Users from \"./pages/Users\";\nimport Register from \"./pages/auth/Register\";\nimport PasswordUpdate from \"./pages/auth/PasswordUpdate\";\nimport PasswordForgot from \"./pages/auth/PasswordForgot\";\nimport Profile from \"./pages/auth/Profile\";\nimport Login from \"./pages/auth/Login\";\nimport CompleteRegistration from \"./pages/auth/CompleteRegistration\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport Post from \"./pages/post/Post\";\nimport SingleUser from \"./pages/SingleUser\";\nimport Posts from \"./pages/post/Posts\";\nimport SinglePost from \"./pages/post/SinglePost\";\n\nconst App = () => {\n  const { state } = useContext(AuthContext);\n  const { user } = state;\n\n  const client = new ApolloClient({\n    uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n    request: (operation) => {\n      operation.setContext({\n        headers: {\n          authtoken: user ? user.token : \"\",\n        },\n      });\n    },\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <Nav />\n      <ToastContainer />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/users\" component={Users} />\n        <Route exact path=\"/posts\" component={Posts} />\n        <PublicRoute exact path=\"/register\" component={Register} />\n        <PublicRoute exact path=\"/login\" component={Login} />\n        <Route\n          exact\n          path=\"/complete-registration\"\n          component={CompleteRegistration}\n        />\n        <Route exact path=\"/password/forgot\" component={PasswordForgot} />\n        <PrivateRoute\n          exact\n          path=\"/password/update\"\n          component={PasswordUpdate}\n        />\n        <PrivateRoute exact path=\"/profile\" component={Profile} />\n        <PrivateRoute exact path=\"/post/create\" component={Post} />\n        <PrivateRoute exact path=\"/post/:idPost\" component={SinglePost} />\n        <Route exact path=\"/user/:username\" component={SingleUser} />\n      </Switch>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { AuthProvider } from \"./context/authContext\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}